name: RDP Access with Bore

on: [workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Download bore
        run: Invoke-WebRequest https://github.com/ekzhang/bore/releases/download/v0.4.0/bore-v0.4.0-x86_64-pc-windows-msvc.zip -OutFile bore.zip

      - name: Extract bore
        run: Expand-Archive bore.zip -DestinationPath .

      - name: Enable Terminal Services
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

      - name: Enable Remote Desktop Firewall Rule
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Set User Authentication for RDP
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

      - name: Generate random password and set for runneradmin
        shell: pwsh
        id: generate_pass
        run: |
          $length = 12
          $chars  = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_-+='
          $password = -join ((1..$length) | ForEach-Object { $chars[(Get-Random -Maximum $chars.Length)] })
          $securePass = ConvertTo-SecureString -String $password -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $securePass

          # Exportar la contrase√±a para usarla en el siguiente paso (no se imprime)
          Write-Output "::set-output name=password::$password"

      - name: Start bore and send data to webhook
        shell: pwsh
        env:
          RDP_PASS: ${{ steps.generate_pass.outputs.password }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          $process = Start-Process -FilePath ".\bore.exe" -ArgumentList "local", "3389", "--to", "bore.pub" -NoNewWindow -PassThru -RedirectStandardOutput "bore_output.txt"
          
          $found = $false
          while (-not $found) {
              Start-Sleep -Seconds 1
              if (Test-Path bore_output.txt) {
                  $lines = Get-Content bore_output.txt
                  foreach ($line in $lines) {
                      if ($line -match "listening at bore.pub:(\d+)") {
                          $port  = $Matches[1]
                          $found = $true
                          
                          $body = @{
                            "port"     = $port
                            "url"      = "bore.pub:$port"
                            "password" = $env:RDP_PASS
                          } | ConvertTo-Json
                          
                          Invoke-RestMethod -Uri $env:WEBHOOK_URL `
                              -Method POST `
                              -ContentType "application/json" `
                              -Body $body
                          break
                      }
                  }
              }
          }

          Wait-Process -Id $process.Id
